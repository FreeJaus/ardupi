<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>FreeJaus - Ardupi</title>
    <link>http://freejaus.github.io/ardupi/</link>
    <description>Recent content on FreeJaus - Ardupi</description>
    <generator>Hugo -- gohugo.io</generator>
    
	<atom:link href="http://freejaus.github.io/ardupi/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Background</title>
      <link>http://freejaus.github.io/ardupi/project/rc/background/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://freejaus.github.io/ardupi/project/rc/background/</guid>
      <description> Leyes de Ohm y Kirchhoff Consumo/alimentación/potencia Motores eléctricos  Corriente continua (DC, Brushed)  Servomotor  Corriente alterna  Paso a paso Síncrono (Brushless) Asíncrono   Microcontroladores Comunicación  Síncrona/Asíncrona Half/Full Duplex   </description>
    </item>
    
    <item>
      <title>Bill of materials (BOM)</title>
      <link>http://freejaus.github.io/ardupi/project/rc/bom/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://freejaus.github.io/ardupi/project/rc/bom/</guid>
      <description>Datasheets  (ATTINY816): 8KB Flash, 512B SRAM and 128 bytes of EEPROM (ATTINY1616): 16 KB Flash, 2 KB SRAM and 128 bytes of EEPROM   Pin count  USB: 2 (power) + 2 (D+ and D-) NRF24L01: 2 (power) + 5 (4 SPI + CE) [ + IRQ ] Joystick: 2 (power) + 2 (analog) + 1 Servo: 2 (power) + 1 (PWM) Encoder: 2 (power) + 2 (A and B) btn/switch matrix:  4&amp;gt;x&amp;gt;0: x x&amp;gt;4: ceil(sqrt(x)*2)   Nunchuk 14/SOIC150mil (ATtiny814 or ATtiny1614)</description>
    </item>
    
    <item>
      <title>Comunicación</title>
      <link>http://freejaus.github.io/ardupi/tutorial/com/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://freejaus.github.io/ardupi/tutorial/com/</guid>
      <description> ¿Qué es una antena?
 Arduino EMF Detector, para entender el efecto de la radiación electromagnética en un cable suelto.  315/433MHz
 nRF24L01
 HC-05, HC-06, HM-10, HM-11
 ESP8266
 VirtualWire
  </description>
    </item>
    
    <item>
      <title>Diseño y estructura de programación</title>
      <link>http://freejaus.github.io/ardupi/event/aulascolaborativas/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://freejaus.github.io/ardupi/event/aulascolaborativas/</guid>
      <description>Objetivos:  Generales: - Primera sesión: - Segunda sesión: -   Descripción de la actividad, referencias, imágenes/fotografías, documentación, actas, etc.</description>
    </item>
    
    <item>
      <title>Herramientas</title>
      <link>http://freejaus.github.io/ardupi/project/rc/tools/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://freejaus.github.io/ardupi/project/rc/tools/</guid>
      <description> Arduino IDE Fritzing 123circuits  </description>
    </item>
    
    <item>
      <title>Hugo</title>
      <link>http://freejaus.github.io/ardupi/refs/hugo/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://freejaus.github.io/ardupi/refs/hugo/</guid>
      <description>Hugo - Hosting on GitHub Pages  GitHub provee espacio de alojamiento para páginas web estáticas, lo que quiere decir que no se pueden utilizar gestores de contenidos como WordPress o Drupal (escritos en lenguajes como PHP, Ruby o Python para generar el contenido de forma dinámica. Sin embargo, no es necesario editar a mano todo el contenido utilizando HTML, CSS y JavaScript. Existen programas denominados generadores de páginas estáticas que, partiendo de contenido marcado (típicamente Markdown), aplican plantillas para facilitar la tarea de creación de las páginas en HTML.</description>
    </item>
    
    <item>
      <title>Mini DeskBot</title>
      <link>http://freejaus.github.io/ardupi/tfg/minideskbot/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://freejaus.github.io/ardupi/tfg/minideskbot/</guid>
      <description>Descripción De un lector/grabador de CD/DVD se puede obtener lo siguiente (Dissection of a DVD writer):
 Motor de corriente continua (para extraer e introducir la bandeja) Motor brushless (para girar el disco) Motor paso a paso (para mover el cabezal óptico) Dos ejes que soportan el cabezal óptico, y un husillo unido al motor paso a paso. Uno o varios diodos láser (IR o rojos) Conectores y circuitos integrados (drivers)  Con dos juegos de ejes, husillos, y motores paso a paso, se puede construir una pequeña máquina CNC de dos grados de libertad.</description>
    </item>
    
    <item>
      <title>Persistance Of Vision</title>
      <link>http://freejaus.github.io/ardupi/project/pov/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://freejaus.github.io/ardupi/project/pov/</guid>
      <description>    https://es.wikipedia.org/wiki/Persistencia_de_la_visi%C3%B3n https://en.wikipedia.org/wiki/Persistence_of_vision   LED matrix  Acher  Propeller (aprovechando el motor brushless de un lector de CD/DVD)  http://www.instructables.com/id/Propeller-Clock/ https://www.330ohms.com/blogs/blog/85008964-arduino-propeller-clock-reloj http://www.pyroelectro.com/projects/pyro_propeller_clock_pov/   </description>
    </item>
    
    <item>
      <title>Pandoc</title>
      <link>http://freejaus.github.io/ardupi/refs/pandoc/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://freejaus.github.io/ardupi/refs/pandoc/</guid>
      <description> http://tomp.io/phd-thesis-template-markdown.html http://pandoc.org/README.html https://users.soe.ucsc.edu/~ivo/_posts/2015-03-12-repeatable-paper-generation-with-docker-and-pandoc.html https://github.com/vrthra/markdown-ieee-pdf https://github.com/cscorley/ieee-pandoc-template https://github.com/jgm/pandoc/wiki/Pandoc-vs-Multimarkdown#features-in-mmd-but-not-pandoc https://github.com/tompollard/phd_thesis_markdown https://github.com/carnby/pandoc-thesis  </description>
    </item>
    
    <item>
      <title>Plantilla Propuesta de Trabajo Fin de Grado</title>
      <link>http://freejaus.github.io/ardupi/tfg/template/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://freejaus.github.io/ardupi/tfg/template/</guid>
      <description> Descripción Justificación Otros datos de interés:  ¿Individual o en grupo? ¿Es continuación de algún proyecto anterior? ¿Es parte de algún proyecto de mayor alcance? ¿Existe alguna empresa u organización implicada? ¿Se cuenta con presupuesto para realizarlo? &amp;hellip;  </description>
    </item>
    
    <item>
      <title>Plantilla Propuesta de Thing</title>
      <link>http://freejaus.github.io/ardupi/project/template/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://freejaus.github.io/ardupi/project/template/</guid>
      <description> Descripción Justificación Otros datos de interés:  ¿Individual o en grupo? ¿Es continuación de algún proyecto anterior? ¿Es parte de algún proyecto de mayor alcance? ¿Existe alguna empresa u organización implicada? ¿Se cuenta con presupuesto para realizarlo? &amp;hellip;  </description>
    </item>
    
    <item>
      <title>Referencias</title>
      <link>http://freejaus.github.io/ardupi/project/rc/refs/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://freejaus.github.io/ardupi/project/rc/refs/</guid>
      <description>Sesión 0:  https://www.arduino.cc/en/Guide/HomePage https://www.arduino.cc/en/Main/ArduinoBoardLeonardo http://www.atmel.com/devices/atmega32u4.aspx http://www.atmel.com/Images/Atmel-7766-8-bit-AVR-ATmega16U4-32U4_Datasheet.pdf  Sesión 2:  arduino.cc/en/Reference/Servo arduino.cc/en/Reference/HomePage: delay, int, boolean, analogRead, map, array, const, pinMode, Serial, if, abs, digitalRead&amp;hellip; http://playground.arduino.cc/Learning/Memory arduino.cc/en/Reference/EEPROM  EEPROM Put EEPROM Get    https://www.pjrc.com/teensy/td_libs_VirtualWire.html http://www.airspayce.com/mikem/arduino/VirtualWire.pdf http://www.airspayce.com/mikem/arduino/VirtualWire/ http://robologs.net/2015/02/10/tutorial-de-arduino-y-de-radiofrecuencia-con-virtualwire/
http://www.airspayce.com/mikem/arduino/RadioHead/</description>
    </item>
    
    <item>
      <title>Referencias</title>
      <link>http://freejaus.github.io/ardupi/refs/list/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://freejaus.github.io/ardupi/refs/list/</guid>
      <description> https://sites.google.com/site/geaarduino/  </description>
    </item>
    
    <item>
      <title>RetroPie - Manual de instalacion y configuracion</title>
      <link>http://freejaus.github.io/ardupi/os4rpi/retropie/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://freejaus.github.io/ardupi/os4rpi/retropie/</guid>
      <description>Introduccion ¿Que es RetroPie? (Imagen para Tarjeta SD) La imagen para SD de RetroPie contiene un sistema ready-to-use que provee una instalacion completa de todos los sistemas y funciones que estan soportadas por el script de instalacion de RetroPie
 Instalacion de todos los emuladores soportados por el script de instalacion de RetroPie (see section &amp;ldquo;supported systems/emulators for details&amp;rdquo;) Inicio automatico de Emulation Station, el front end para navegar a traves y cargar las ROMs que tengamos Splash Screen preconfigurada Sistema de comparticion SAMBA dispoible para copiar las ROMs a traves de la conexion de red Demonio USB para copiar las ROMs a traves de un pen-drive  Sistemas/Emuladores soportados The RetroPie SD-card includes emulators for a whole range of gaming history.</description>
    </item>
    
    <item>
      <title>Sesiones</title>
      <link>http://freejaus.github.io/ardupi/project/rc/sesiones/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://freejaus.github.io/ardupi/project/rc/sesiones/</guid>
      <description>SESIÓN 1  Montar todas las piezas del chasis y la carrocería. Analizar qué piezas faltan en comparación con los otros vehículos (comerciales). Analizar qué motores hacen falta y qué características (tamaño, potencia&amp;hellip;) debe tener cada uno.  SESIÓN 2  Montar los motores y los componentes electrónicos fuera del chasis y comprobar el funcionamiento.  https://123d.circuits.io/circuits/1568139-gazteleku-urduliz-coches-teledirigidos-control-de-motores  Montarlo todo en el chasis y comprobar el funcionamiento con el joystick cableado.</description>
    </item>
    
    <item>
      <title>Sitemap</title>
      <link>http://freejaus.github.io/ardupi/sitemap/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://freejaus.github.io/ardupi/sitemap/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Software</title>
      <link>http://freejaus.github.io/ardupi/project/rc/soft/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://freejaus.github.io/ardupi/project/rc/soft/</guid>
      <description> NRF24L01 V-USB dongle  HID driver for the vusbnrf24 dongle  Tutorial básico NRF24L01 con Arduino NRF24L01 with Arduino Leonardo  </description>
    </item>
    
    <item>
      <title>Taller de células solares</title>
      <link>http://freejaus.github.io/ardupi/event/celulassolares/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://freejaus.github.io/ardupi/event/celulassolares/</guid>
      <description>Objetivos:  Generales: - Primera sesión: - Segunda sesión: -   Descripción de la actividad, referencias, imágenes/fotografías, documentación, actas, etc.</description>
    </item>
    
    <item>
      <title>Tareas realizadas</title>
      <link>http://freejaus.github.io/ardupi/project/rc/tareas/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://freejaus.github.io/ardupi/project/rc/tareas/</guid>
      <description>Se han adquirido las piezas necesarias para construir un coche en una tienda especializada en vehículos RC. Se ha escogido un coche por ser el vehículo más fácil de manejar, y debido a las limitaciones para utilizar vehículos voladores en zonas urbanas.  Chasis, carrocería y engranajes Motor de corriente continua Servomotor Batería Variador/inversor y BEC. Es válido tanto para motores de corriente continua como para motores brushless (hasta 300A), y provee alimentación (6V y 3A) a través de una fuente conmutada.</description>
    </item>
    
    <item>
      <title>Timers</title>
      <link>http://freejaus.github.io/ardupi/tutorial/timers/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://freejaus.github.io/ardupi/tutorial/timers/</guid>
      <description>Los temporizadores, también llamados timers o timers/counters, son unos periféricos de los que disponen la práctica totalidad de microcontroladores que se emplean para implementar diversas funciones relacionadas con el tiempo o con el contaje. En realidad, estos periféricos son contadores. Cuando lo que están contando es una frecuencia fija derivada del cristal oscilador del microcontrolador, se denominan timers y, cuando lo que están contando es un evento (flanco de subida o flanco de bajada) en una patilla del microcontrolador, se denominan contadores.</description>
    </item>
    
    <item>
      <title>ToDo</title>
      <link>http://freejaus.github.io/ardupi/todo/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://freejaus.github.io/ardupi/todo/</guid>
      <description>Contenido  Participantes: ¡Privacidad! ¡SPAM! ¿añadir sección específica con la información abiertamente disponible? ¿o utilizar usuarios de GitHub y un grupo (team)? ¿o utilizar una rama del repositorio? Diseñar plantilla de contenido para los proyectos, para después diseñar el layout Diseñar layout para los TFGs/GEAs, imitando la plantilla de la guía  JavaScript  Cuadros spoiler, que muestran la entradilla de un contenido y permiten desplegarlo en la misma página.</description>
    </item>
    
    <item>
      <title>ToDos</title>
      <link>http://freejaus.github.io/ardupi/project/rc/todos/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://freejaus.github.io/ardupi/project/rc/todos/</guid>
      <description>Comunicación
 Mando a distancia IR. RF 333-415 MHz. RF 2.4GHz.  https://arduino-info.wikispaces.com/Nrf24L01-2.4GHz-HowTo  Bluetooth  Controlar desde el móvil.   Interrupciones
 Modo bajo consumo (sleep)  Sensores
 Seguir líneas. Aparcamiento automático. Recorrer un laberinto.  Cámara.
 Placa para integrar las conexiones con un Arduino. ¿Shield o placa independiente?
 Cambiar a motor brushless.
 Bobinar/construir un motor.  Diseñar y fabricar BEC.
 Diseñar y fabricar driver DC.</description>
    </item>
    
    <item>
      <title>[Plantilla] Título que se muestra en la cabecera</title>
      <link>http://freejaus.github.io/ardupi/event/template/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://freejaus.github.io/ardupi/event/template/</guid>
      <description>Objetivos:  Generales: - Primera sesión: - Segunda sesión: -   Descripción de la actividad, referencias, imágenes/fotografías, documentación, actas, etc.</description>
    </item>
    
  </channel>
</rss>